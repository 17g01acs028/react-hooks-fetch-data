/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicImport } from './routes/_public'
import { Route as ProtectedImport } from './routes/_protected'

// Create Virtual Routes

const PublicRegisterLazyImport = createFileRoute('/_public/register')()
const PublicLoginLazyImport = createFileRoute('/_public/login')()
const ProtectedHomeLazyImport = createFileRoute('/_protected/home')()
const ProtectedDashboardLazyImport = createFileRoute('/_protected/dashboard')()
const ProtectedFetchDataWithLoaderLazyImport = createFileRoute(
  '/_protected/fetch-data/with-loader',
)()
const ProtectedFetchDataWithFormLazyImport = createFileRoute(
  '/_protected/fetch-data/with-form',
)()
const ProtectedFetchDataWithErrorLazyImport = createFileRoute(
  '/_protected/fetch-data/with-error',
)()
const ProtectedFetchDataWithAbortLazyImport = createFileRoute(
  '/_protected/fetch-data/with-abort',
)()
const ProtectedFetchDataUsingReactQueryLazyImport = createFileRoute(
  '/_protected/fetch-data/using-react-query',
)()
const ProtectedFetchDataUsingCustomHookLazyImport = createFileRoute(
  '/_protected/fetch-data/using-custom-hook',
)()
const ProtectedFetchDataRefetchLazyImport = createFileRoute(
  '/_protected/fetch-data/refetch',
)()
const ProtectedFetchDataFromStateLazyImport = createFileRoute(
  '/_protected/fetch-data/from-state',
)()

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const PublicRegisterLazyRoute = PublicRegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => PublicRoute,
} as any).lazy(() =>
  import('./routes/_public/register.lazy').then((d) => d.Route),
)

const PublicLoginLazyRoute = PublicLoginLazyImport.update({
  path: '/login',
  getParentRoute: () => PublicRoute,
} as any).lazy(() => import('./routes/_public/login.lazy').then((d) => d.Route))

const ProtectedHomeLazyRoute = ProtectedHomeLazyImport.update({
  path: '/home',
  getParentRoute: () => ProtectedRoute,
} as any).lazy(() =>
  import('./routes/_protected/home.lazy').then((d) => d.Route),
)

const ProtectedDashboardLazyRoute = ProtectedDashboardLazyImport.update({
  path: '/dashboard',
  getParentRoute: () => ProtectedRoute,
} as any).lazy(() =>
  import('./routes/_protected/dashboard.lazy').then((d) => d.Route),
)

const ProtectedFetchDataWithLoaderLazyRoute =
  ProtectedFetchDataWithLoaderLazyImport.update({
    path: '/fetch-data/with-loader',
    getParentRoute: () => ProtectedRoute,
  } as any).lazy(() =>
    import('./routes/_protected/fetch-data/with-loader.lazy').then(
      (d) => d.Route,
    ),
  )

const ProtectedFetchDataWithFormLazyRoute =
  ProtectedFetchDataWithFormLazyImport.update({
    path: '/fetch-data/with-form',
    getParentRoute: () => ProtectedRoute,
  } as any).lazy(() =>
    import('./routes/_protected/fetch-data/with-form.lazy').then(
      (d) => d.Route,
    ),
  )

const ProtectedFetchDataWithErrorLazyRoute =
  ProtectedFetchDataWithErrorLazyImport.update({
    path: '/fetch-data/with-error',
    getParentRoute: () => ProtectedRoute,
  } as any).lazy(() =>
    import('./routes/_protected/fetch-data/with-error.lazy').then(
      (d) => d.Route,
    ),
  )

const ProtectedFetchDataWithAbortLazyRoute =
  ProtectedFetchDataWithAbortLazyImport.update({
    path: '/fetch-data/with-abort',
    getParentRoute: () => ProtectedRoute,
  } as any).lazy(() =>
    import('./routes/_protected/fetch-data/with-abort.lazy').then(
      (d) => d.Route,
    ),
  )

const ProtectedFetchDataUsingReactQueryLazyRoute =
  ProtectedFetchDataUsingReactQueryLazyImport.update({
    path: '/fetch-data/using-react-query',
    getParentRoute: () => ProtectedRoute,
  } as any).lazy(() =>
    import('./routes/_protected/fetch-data/using-react-query.lazy').then(
      (d) => d.Route,
    ),
  )

const ProtectedFetchDataUsingCustomHookLazyRoute =
  ProtectedFetchDataUsingCustomHookLazyImport.update({
    path: '/fetch-data/using-custom-hook',
    getParentRoute: () => ProtectedRoute,
  } as any).lazy(() =>
    import('./routes/_protected/fetch-data/using-custom-hook.lazy').then(
      (d) => d.Route,
    ),
  )

const ProtectedFetchDataRefetchLazyRoute =
  ProtectedFetchDataRefetchLazyImport.update({
    path: '/fetch-data/refetch',
    getParentRoute: () => ProtectedRoute,
  } as any).lazy(() =>
    import('./routes/_protected/fetch-data/refetch.lazy').then((d) => d.Route),
  )

const ProtectedFetchDataFromStateLazyRoute =
  ProtectedFetchDataFromStateLazyImport.update({
    path: '/fetch-data/from-state',
    getParentRoute: () => ProtectedRoute,
  } as any).lazy(() =>
    import('./routes/_protected/fetch-data/from-state.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/_protected/dashboard': {
      id: '/_protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof ProtectedDashboardLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/home': {
      id: '/_protected/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof ProtectedHomeLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_public/login': {
      id: '/_public/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PublicLoginLazyImport
      parentRoute: typeof PublicImport
    }
    '/_public/register': {
      id: '/_public/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof PublicRegisterLazyImport
      parentRoute: typeof PublicImport
    }
    '/_protected/fetch-data/from-state': {
      id: '/_protected/fetch-data/from-state'
      path: '/fetch-data/from-state'
      fullPath: '/fetch-data/from-state'
      preLoaderRoute: typeof ProtectedFetchDataFromStateLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/fetch-data/refetch': {
      id: '/_protected/fetch-data/refetch'
      path: '/fetch-data/refetch'
      fullPath: '/fetch-data/refetch'
      preLoaderRoute: typeof ProtectedFetchDataRefetchLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/fetch-data/using-custom-hook': {
      id: '/_protected/fetch-data/using-custom-hook'
      path: '/fetch-data/using-custom-hook'
      fullPath: '/fetch-data/using-custom-hook'
      preLoaderRoute: typeof ProtectedFetchDataUsingCustomHookLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/fetch-data/using-react-query': {
      id: '/_protected/fetch-data/using-react-query'
      path: '/fetch-data/using-react-query'
      fullPath: '/fetch-data/using-react-query'
      preLoaderRoute: typeof ProtectedFetchDataUsingReactQueryLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/fetch-data/with-abort': {
      id: '/_protected/fetch-data/with-abort'
      path: '/fetch-data/with-abort'
      fullPath: '/fetch-data/with-abort'
      preLoaderRoute: typeof ProtectedFetchDataWithAbortLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/fetch-data/with-error': {
      id: '/_protected/fetch-data/with-error'
      path: '/fetch-data/with-error'
      fullPath: '/fetch-data/with-error'
      preLoaderRoute: typeof ProtectedFetchDataWithErrorLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/fetch-data/with-form': {
      id: '/_protected/fetch-data/with-form'
      path: '/fetch-data/with-form'
      fullPath: '/fetch-data/with-form'
      preLoaderRoute: typeof ProtectedFetchDataWithFormLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/fetch-data/with-loader': {
      id: '/_protected/fetch-data/with-loader'
      path: '/fetch-data/with-loader'
      fullPath: '/fetch-data/with-loader'
      preLoaderRoute: typeof ProtectedFetchDataWithLoaderLazyImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

interface ProtectedRouteChildren {
  ProtectedDashboardLazyRoute: typeof ProtectedDashboardLazyRoute
  ProtectedHomeLazyRoute: typeof ProtectedHomeLazyRoute
  ProtectedFetchDataFromStateLazyRoute: typeof ProtectedFetchDataFromStateLazyRoute
  ProtectedFetchDataRefetchLazyRoute: typeof ProtectedFetchDataRefetchLazyRoute
  ProtectedFetchDataUsingCustomHookLazyRoute: typeof ProtectedFetchDataUsingCustomHookLazyRoute
  ProtectedFetchDataUsingReactQueryLazyRoute: typeof ProtectedFetchDataUsingReactQueryLazyRoute
  ProtectedFetchDataWithAbortLazyRoute: typeof ProtectedFetchDataWithAbortLazyRoute
  ProtectedFetchDataWithErrorLazyRoute: typeof ProtectedFetchDataWithErrorLazyRoute
  ProtectedFetchDataWithFormLazyRoute: typeof ProtectedFetchDataWithFormLazyRoute
  ProtectedFetchDataWithLoaderLazyRoute: typeof ProtectedFetchDataWithLoaderLazyRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedDashboardLazyRoute: ProtectedDashboardLazyRoute,
  ProtectedHomeLazyRoute: ProtectedHomeLazyRoute,
  ProtectedFetchDataFromStateLazyRoute: ProtectedFetchDataFromStateLazyRoute,
  ProtectedFetchDataRefetchLazyRoute: ProtectedFetchDataRefetchLazyRoute,
  ProtectedFetchDataUsingCustomHookLazyRoute:
    ProtectedFetchDataUsingCustomHookLazyRoute,
  ProtectedFetchDataUsingReactQueryLazyRoute:
    ProtectedFetchDataUsingReactQueryLazyRoute,
  ProtectedFetchDataWithAbortLazyRoute: ProtectedFetchDataWithAbortLazyRoute,
  ProtectedFetchDataWithErrorLazyRoute: ProtectedFetchDataWithErrorLazyRoute,
  ProtectedFetchDataWithFormLazyRoute: ProtectedFetchDataWithFormLazyRoute,
  ProtectedFetchDataWithLoaderLazyRoute: ProtectedFetchDataWithLoaderLazyRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

interface PublicRouteChildren {
  PublicLoginLazyRoute: typeof PublicLoginLazyRoute
  PublicRegisterLazyRoute: typeof PublicRegisterLazyRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicLoginLazyRoute: PublicLoginLazyRoute,
  PublicRegisterLazyRoute: PublicRegisterLazyRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof PublicRouteWithChildren
  '/dashboard': typeof ProtectedDashboardLazyRoute
  '/home': typeof ProtectedHomeLazyRoute
  '/login': typeof PublicLoginLazyRoute
  '/register': typeof PublicRegisterLazyRoute
  '/fetch-data/from-state': typeof ProtectedFetchDataFromStateLazyRoute
  '/fetch-data/refetch': typeof ProtectedFetchDataRefetchLazyRoute
  '/fetch-data/using-custom-hook': typeof ProtectedFetchDataUsingCustomHookLazyRoute
  '/fetch-data/using-react-query': typeof ProtectedFetchDataUsingReactQueryLazyRoute
  '/fetch-data/with-abort': typeof ProtectedFetchDataWithAbortLazyRoute
  '/fetch-data/with-error': typeof ProtectedFetchDataWithErrorLazyRoute
  '/fetch-data/with-form': typeof ProtectedFetchDataWithFormLazyRoute
  '/fetch-data/with-loader': typeof ProtectedFetchDataWithLoaderLazyRoute
}

export interface FileRoutesByTo {
  '': typeof PublicRouteWithChildren
  '/dashboard': typeof ProtectedDashboardLazyRoute
  '/home': typeof ProtectedHomeLazyRoute
  '/login': typeof PublicLoginLazyRoute
  '/register': typeof PublicRegisterLazyRoute
  '/fetch-data/from-state': typeof ProtectedFetchDataFromStateLazyRoute
  '/fetch-data/refetch': typeof ProtectedFetchDataRefetchLazyRoute
  '/fetch-data/using-custom-hook': typeof ProtectedFetchDataUsingCustomHookLazyRoute
  '/fetch-data/using-react-query': typeof ProtectedFetchDataUsingReactQueryLazyRoute
  '/fetch-data/with-abort': typeof ProtectedFetchDataWithAbortLazyRoute
  '/fetch-data/with-error': typeof ProtectedFetchDataWithErrorLazyRoute
  '/fetch-data/with-form': typeof ProtectedFetchDataWithFormLazyRoute
  '/fetch-data/with-loader': typeof ProtectedFetchDataWithLoaderLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/_protected/dashboard': typeof ProtectedDashboardLazyRoute
  '/_protected/home': typeof ProtectedHomeLazyRoute
  '/_public/login': typeof PublicLoginLazyRoute
  '/_public/register': typeof PublicRegisterLazyRoute
  '/_protected/fetch-data/from-state': typeof ProtectedFetchDataFromStateLazyRoute
  '/_protected/fetch-data/refetch': typeof ProtectedFetchDataRefetchLazyRoute
  '/_protected/fetch-data/using-custom-hook': typeof ProtectedFetchDataUsingCustomHookLazyRoute
  '/_protected/fetch-data/using-react-query': typeof ProtectedFetchDataUsingReactQueryLazyRoute
  '/_protected/fetch-data/with-abort': typeof ProtectedFetchDataWithAbortLazyRoute
  '/_protected/fetch-data/with-error': typeof ProtectedFetchDataWithErrorLazyRoute
  '/_protected/fetch-data/with-form': typeof ProtectedFetchDataWithFormLazyRoute
  '/_protected/fetch-data/with-loader': typeof ProtectedFetchDataWithLoaderLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/dashboard'
    | '/home'
    | '/login'
    | '/register'
    | '/fetch-data/from-state'
    | '/fetch-data/refetch'
    | '/fetch-data/using-custom-hook'
    | '/fetch-data/using-react-query'
    | '/fetch-data/with-abort'
    | '/fetch-data/with-error'
    | '/fetch-data/with-form'
    | '/fetch-data/with-loader'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/dashboard'
    | '/home'
    | '/login'
    | '/register'
    | '/fetch-data/from-state'
    | '/fetch-data/refetch'
    | '/fetch-data/using-custom-hook'
    | '/fetch-data/using-react-query'
    | '/fetch-data/with-abort'
    | '/fetch-data/with-error'
    | '/fetch-data/with-form'
    | '/fetch-data/with-loader'
  id:
    | '__root__'
    | '/_protected'
    | '/_public'
    | '/_protected/dashboard'
    | '/_protected/home'
    | '/_public/login'
    | '/_public/register'
    | '/_protected/fetch-data/from-state'
    | '/_protected/fetch-data/refetch'
    | '/_protected/fetch-data/using-custom-hook'
    | '/_protected/fetch-data/using-react-query'
    | '/_protected/fetch-data/with-abort'
    | '/_protected/fetch-data/with-error'
    | '/_protected/fetch-data/with-form'
    | '/_protected/fetch-data/with-loader'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ProtectedRoute: typeof ProtectedRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  ProtectedRoute: ProtectedRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_protected",
        "/_public"
      ]
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/dashboard",
        "/_protected/home",
        "/_protected/fetch-data/from-state",
        "/_protected/fetch-data/refetch",
        "/_protected/fetch-data/using-custom-hook",
        "/_protected/fetch-data/using-react-query",
        "/_protected/fetch-data/with-abort",
        "/_protected/fetch-data/with-error",
        "/_protected/fetch-data/with-form",
        "/_protected/fetch-data/with-loader"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/login",
        "/_public/register"
      ]
    },
    "/_protected/dashboard": {
      "filePath": "_protected/dashboard.lazy.tsx",
      "parent": "/_protected"
    },
    "/_protected/home": {
      "filePath": "_protected/home.lazy.tsx",
      "parent": "/_protected"
    },
    "/_public/login": {
      "filePath": "_public/login.lazy.tsx",
      "parent": "/_public"
    },
    "/_public/register": {
      "filePath": "_public/register.lazy.tsx",
      "parent": "/_public"
    },
    "/_protected/fetch-data/from-state": {
      "filePath": "_protected/fetch-data/from-state.lazy.tsx",
      "parent": "/_protected"
    },
    "/_protected/fetch-data/refetch": {
      "filePath": "_protected/fetch-data/refetch.lazy.tsx",
      "parent": "/_protected"
    },
    "/_protected/fetch-data/using-custom-hook": {
      "filePath": "_protected/fetch-data/using-custom-hook.lazy.tsx",
      "parent": "/_protected"
    },
    "/_protected/fetch-data/using-react-query": {
      "filePath": "_protected/fetch-data/using-react-query.lazy.tsx",
      "parent": "/_protected"
    },
    "/_protected/fetch-data/with-abort": {
      "filePath": "_protected/fetch-data/with-abort.lazy.tsx",
      "parent": "/_protected"
    },
    "/_protected/fetch-data/with-error": {
      "filePath": "_protected/fetch-data/with-error.lazy.tsx",
      "parent": "/_protected"
    },
    "/_protected/fetch-data/with-form": {
      "filePath": "_protected/fetch-data/with-form.lazy.tsx",
      "parent": "/_protected"
    },
    "/_protected/fetch-data/with-loader": {
      "filePath": "_protected/fetch-data/with-loader.lazy.tsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
